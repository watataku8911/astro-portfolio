---
import WorkCard from "../UIKit/WorkCard .astro";

type Props = {
  limit: string;
  title?: string;
};

const { limit, title } = Astro.props;

type Work = {
  totalCount: number;
  contents: Contents[];
};

type Contents = {
  id: string;
  image: Image;
  title: string;
  href: string;
  use_tech: string;
  comment: string;
};

type Image = {
  url: string;
  width: number;
  height: number;
};

const myMicroCMSApiUrl = `https://${
  import.meta.env.MICROCMS_SERVICE_DOMAIN_PORTFOLIO
}.microcms.io/api/v1/works?orders=-publishedAt&limit=${limit}`;

const res = await fetch(myMicroCMSApiUrl, {
  headers: {
    "X-MICROCMS-API-KEY": import.meta.env.MICROCMS_API_KEY_PORTFOLIO,
  },
});
const getFetchData: Work = await res.json();
---

<section class="works" id="work">
  <div class="works__work">
    {
      title && (
        <h3 class="works__work__title">
          Works<span class="works__work__title--sub">{title}</span>
        </h3>
      )
    }

    <div class="works__work__inner">
      {
        getFetchData.contents.map((work: Contents) => (
          <WorkCard
            image={work.image.url}
            title={work.title}
            width={work.image.width}
            height={work.image.height}
            use_tech={work.use_tech}
            href={`/work/${work.id}`}
            comment={work.comment}
          />
        ))
      }
    </div>
  </div>
</section>

<script>
  import { intersection } from "../../ts/function";

  intersection(document.querySelectorAll(".works__work__title"));
  intersection(document.querySelectorAll(".works__work__linker"));
</script>

<style>
  .works__work {
    width: var(--base-width);
    margin: 0 auto;
  }

  .works__work__title {
    color: var(--accent-color);
    font-size: 4.5em;
    padding: 0 0 60px 0;
    opacity: 0;
    transform: translate3d(-30px, 0, 0);
  }
  @media screen and (min-width: 482px) and (max-width: 1025px) {
    .works__work__title {
      font-size: 3.5em;
      transform: translate3d(0, 10px, 0);
    }
  }
  @media screen and (max-width: 481px) {
    .works__work__title {
      font-size: 2em;
      transform: translate3d(0, 10px, 0);
      padding: 0 0 30px 0;
    }
  }

  .works__work__title--sub {
    font-size: 0.25em;
    color: var(--subtextColor);
  }

  .works__work__title--sub::before {
    content: "";
    display: inline-block;
    width: 20px;
    border-bottom: solid 1px var(--subtextColor);
    margin: 0 5px 0 5px;
  }

  .works__work__title.active {
    animation: animationName 0.5s ease 0.5s 1 forwards;
  }

  .works__work__inner {
    width: 100%;
    display: flex;
    row-gap: 25px;
    align-items: center;
    justify-content: space-between;
    flex-wrap: wrap;
  }
  @media screen and (max-width: 481px) {
    .works__work__inner {
      width: 100%;
    }
  }

  .works__work__inner::after {
    content: "";
    display: block;
    width: var(--card-size-width-3col);
  }

  .works__work__linker {
    font-size: 24px;
    margin-top: 30px;
    text-align: right;
    opacity: 0;
    transform: translate3d(30px, 0, 0);
  }
  @media screen and (max-width: 1026px) {
    .works__work__linker {
      margin-top: 10px;
      font-size: 18px;
    }
  }

  .works__work__linker.active {
    animation: animationName 0.5s ease 0.5s 1 forwards;
  }

  @keyframes animationName {
    100% {
      opacity: 1;
      transform: translate3d(0, 0, 0);
    }
  }
</style>
