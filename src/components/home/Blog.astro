---
import Qiita from "../home/blog/qiita.astro";
import Zenn from "../home/blog/zenn.astro";
import WatatakuBlog from "../home/blog/watataku-blog.astro";
import Linker from "../UIKit/Linker.astro";

type Props = {
  qiita?: string;
  zenn?: string;
  watatakuBlog?: string;
  path?: string;
};

const { qiita, zenn, watatakuBlog, path } = Astro.props;
---

<section class="blogs" id="blog">
  <div class="blogs__blog">
    <h2 class="blogs__blog__title">
      Tech&nbsp;Blogs<span class="blogs__blog__title__sub">技術ブログ</span>
    </h2>
    <div class="blogs__blog__inner">
      <h3 class="blogs__blog__inner__title">- Qiita</h3>
      <Qiita perPage={"6"} />
    </div>
    {
      qiita && (
        <div class="blogs__blog__linker">
          <Linker href={qiita} msg="もっとみる" target={"_self"} />
        </div>
      )
    }
    <div class="blogs__blog__inner">
      <h3 class="blogs__blog__inner__title">- Zenn</h3>
      <Zenn count={"6"} />
    </div>
    {
      zenn && (
        <div class="blogs__blog__linker">
          <Linker href={zenn} msg="もっとみる" target={"_self"} />
        </div>
      )
    }
    <div class="blogs__blog__inner">
      <h3 class="blogs__blog__inner__title">- Watataku ブログ</h3>
      <WatatakuBlog limit={"6"} />
    </div>
    {
      watatakuBlog && (
        <div class="blogs__blog__linker">
          <Linker href={watatakuBlog} msg="もっとみる" target={"_self"} />
        </div>
      )
    }
    {
      path && (
        <div class="blogs__blog__linker">
          <Linker href={path} msg="Tech Blogs→" target={"_self"} />
        </div>
      )
    }
  </div>
</section>

<script>
  import { intersection } from "../../ts/function";

  intersection(document.querySelectorAll(".blogs__blog__title"));
  intersection(document.querySelectorAll(".blogs__blog__inner"));
  intersection(document.querySelectorAll(".blogs__blog__linker"));
</script>

<style>
  .blogs {
    background-color: var(--main-color);
  }

  .blogs__blog {
    width: var(--base-width);
    margin: 0 auto;
  }

  .blogs__blog__title {
    font-size: 4.5em;
    padding: 0 0 60px 0;
    opacity: 0;
    transform: translateX(-30px);
    color: var(--accent-color);
  }
  @media screen and (min-width: 482px) and (max-width: 1026px) {
    .blogs__blog__title {
      font-size: 3.5em;
      transform: translateY(10px);
    }
  }
  @media screen and (max-width: 481px) {
    .blogs__blog__title {
      font-size: 2em;
      padding: 0 0 30px 0;
      transform: translateY(10px);
    }
  }

  .blogs__blog__title__sub {
    font-size: 0.25em;
    color: var(--subtextColor);
  }

  .blogs__blog__title__sub::before {
    content: "";
    display: inline-block;
    width: 20px;
    border-bottom: solid 1px var(--subtextColor);
    margin: 0 5px 0 5px;
  }

  .blogs__blog__title.active {
    animation: animationName 0.5s ease 0.5s 1 forwards;
  }

  .blogs__blog__inner:nth-child(2n) {
    opacity: 0;
    transform: translateX(30px);
  }
  .blogs__blog__inner:nth-child(2n + 1) {
    opacity: 0;
    transform: translateX(-30px);
  }
  @media screen and (max-width: 1026px) {
    .blogs__blog__inner:nth-child(2n) {
      transform: translateY(10px);
    }
    .blogs__blog__inner:nth-child(2n + 1) {
      transform: translateY(10px);
    }
  }

  .blogs__blog__inner.active {
    animation: animationName 0.5s ease 0.5s 1 forwards;
  }

  .blogs__blog__inner__title {
    color: var(--accent-color);
    margin-bottom: 20px;
  }

  .blogs__blog__linker {
    font-size: 24px;
    text-align: right;
    opacity: 0;
    transform: translateX(30px);
  }
  @media screen and (max-width: 1026px) {
    .blogs__blog__linker {
      font-size: 18px;
      transform: translateY(10px);
    }
  }

  .blogs__blog__linker.active {
    animation: animationName 0.5s ease 0.5s 1 forwards;
  }

  @keyframes animationName {
    100% {
      opacity: 1;
      transform: translate(0, 0);
    }
  }
</style>
