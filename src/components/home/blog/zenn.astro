---
import Card from "../../UIKit/Card.astro";

type Zenn = {
  items: Items[];
};

type Items = {
  link: string;
  title: string;
  pubDate: string;
};

const endpoint = "https://api.rss2json.com/v1/api.json";
const feed = "https://zenn.dev/watataku/feed";

const myZennApiUrl =
  endpoint +
  "?rss_url=" +
  feed +
  "&api_key=" +
  import.meta.env.RSS_TO_JSON_API_KEY +
  "&count=4";

// console.log(myZennApiUrl);

const res = await fetch(myZennApiUrl);
const getFetchData: Zenn = await res.json();

// console.log(getFetchData.items);
---

<div class="zenn">
  {
    getFetchData.items.map((zenn: Items) => (
      <Card
        target={"_blank"}
        image={"/img/zenn.png"}
        href={zenn.link}
        title={zenn.title}
        time={zenn.pubDate}
      />
    ))
  }
</div>

<script>
  import gsap from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";

  gsap.registerPlugin(ScrollTrigger);

  const blogsInner = ".blogs__inner";
  const qiita = ".qiita";

  gsap.set(blogsInner, {
    opacity: 0,
    y: 90,
  });
  gsap.set(qiita, {
    opacity: 0,
    y: 90,
  });

  gsap.to(qiita, {
    opacity: 1,
    y: 0,
    scrollTrigger: {
      trigger: blogsInner,
      start: "top center",
    },
  });
</script>
<style>
  .zenn {
    height: 300px;
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    justify-content: space-between;
  }

  .zenn::before {
    content: "";
    width: 20vw;
    order: 1;
  }

  .zenn::after {
    content: "";
    width: 20vw;
  }

  @media screen and (min-width: 482px) and (max-width: 1025px) {
    .zenn {
      height: 220px;
    }
  }

  @media screen and (max-width: 481px) {
    .zenn {
      height: 450px;
    }

    .zenn::before {
      width: 45vw;
    }

    .zenn::after {
      width: 45vw;
    }
  }
</style>
