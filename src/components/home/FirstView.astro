---
import IconDown from "/icon/icon_down.svg";
---

<section class="first-view">
  <div class="first-view__image-box">
    <img class="first-view__image" src="/img/typing.png" alt="pc" />
  </div>

  <div class="first-view__circle"></div>

  <div class="first-view__title center-top">
    <h1 class="first-view__title__text">Welcome&nbsp;to</h1>
    <h1 class="first-view__title__text margin-left">my&nbsp;portfolio.</h1>
  </div>

  <p class="first-view__text bottom">
    Markup&nbsp;Enginner/Frontend&nbsp;Enginner.
  </p>

  <div class="pic_down">
    <img src={IconDown} alt="↓" />
  </div>
</section>

<script>
  import gsap from "gsap";

  surroundSpan(".first-view__title__text");
  surroundSpan(".first-view__text");

  const jsLoaderBg = ".js-loader-bg";
  const jsDot = ".js-loader-dot-wrap > span";
  const firstViewCircle = ".first-view__circle";
  const firstViewImageBox = ".first-view__image-box";
  const firstViewTitle = ".first-view__title__text span";
  const firstViewtext = ".first-view__text span";
  const picDown = ".pic_down";

  gsap.set([jsDot, firstViewTitle, firstViewtext, firstViewImageBox], {
    opacity: 0,
    y: -50,
  });
  gsap.set([firstViewCircle, picDown], {
    opacity: 0,
    y: 30,
  });

  const loaded = () => {
    gsap
      .timeline()
      .to(jsDot, {
        opacity: 0,
      })
      .to(jsLoaderBg, {
        y: "100%",
        delay: 0.5,
      })
      .to(
        firstViewCircle,
        {
          opacity: 1,
          y: 0,
          duration: 0.8,
          stagger: {
            amount: 0.6,
          },
        },
        "+=0.2"
      )
      .to(
        firstViewImageBox,
        {
          opacity: 1,
          y: 0,
          duration: 0.8,
          stagger: {
            amount: 0.6,
          },
        },
        "+=0.2"
      )
      .to(
        firstViewTitle,
        {
          /* 前のアニメーションが完了する0.1秒前に実行 */
          opacity: 1,
          y: 0,
          stagger: {
            amount: 1,
            from: "start",
            ease: "sine.in",
          },
        },
        "-=0.1"
      )
      .to(
        firstViewtext,
        {
          /* 前のアニメーションが完了する0.1秒前に実行 */
          opacity: 1,
          y: 0,
          stagger: {
            amount: 1,
            from: "start",
            ease: "sine.in",
          },
        },
        "-=0.1"
      )
      .to(
        picDown,
        {
          opacity: 2,
          y: 0,
          duration: 0.8,
        },
        "+=0.2"
      );
  };

  // loading完了
  window.addEventListener("load", (event) => {
    setTimeout(() => {
      loaded();
    }, 3000);
  });

  setTimeout(() => {
    loaded();
  }, 9000);
</script>

<style>
  /* メイン */
  .first-view {
    position: relative;
    width: 100%;
    height: 100vh;
    overflow: hidden;
  }

  .first-view__header__logo a {
    color: #333;
  }

  .first-view__image-box {
    position: absolute;
    top: 10%;
    right: 0;
  }

  .first-view__image {
    width: 450px;
    height: 500px;
  }
  @media screen and (min-width: 482px) and (max-width: 1025px) {
    .first-view__image {
      width: calc(15vh + 150px);
      height: calc(15vh + 150px);
    }
  }
  @media screen and (max-width: 481px) {
    .first-view__image {
      width: 200px;
      height: 200px;
    }
  }

  /* text */
  .first-view__text {
    font-family: "Lobster";
    position: absolute;
    font-size: 4.5em;
  }
  @media screen and (min-width: 482px) and (max-width: 1025px) {
    .first-view__text {
      font-size: 2em;
    }
  }
  @media screen and (max-width: 481px) {
    .first-view__text {
      font-size: 1em;
    }
  }

  .first-view__title {
    font-family: "Lobster";
    width: 100%;
    text-align: left;
    font-size: 80px;
    position: absolute;
  }
  @media screen and (min-width: 482px) and (max-width: 1025px) {
    .first-view__title {
      font-size: calc(5vh + 12px);
    }
  }
  @media screen and (max-width: 481px) {
    .first-view__title {
      font-size: 2em;
    }
  }

  .first-view__title__text.margin-left {
    margin-left: 15vw;
  }

  .center-top {
    top: 27%;
  }
  @media screen and (min-width: 482px) and (max-width: 1025px) {
    .center-top {
      top: 35vh;
    }
  }
  @media screen and (max-width: 481px) {
    .center-top {
      top: 38%;
    }
  }

  .bottom {
    left: 1%;
    bottom: 2%;
  }

  /* 円 */
  .first-view__circle {
    position: absolute;
    width: 70vw;
    height: 70vw;
    bottom: 0%;
  }
  .first-view__circle:after {
    content: "";
    position: absolute;
    border: solid #addff2;
    border-width: 70vw 70vw 0 0;
    border-top-right-radius: 70vw;
  }
  @media screen and (min-width: 482px) and (max-width: 1025px) {
    .first-view__circle {
      width: calc(45vw + 50vh);
      height: calc(45vw + 50vh);
    }
    .first-view__circle:after {
      border-width: calc(45vw + 50vh) calc(45vw + 50vh) 0 0;
      border-top-right-radius: calc(45vw + 50vh);
    }
  }
  @media screen and (max-width: 481px) {
    .first-view__circle {
      width: 70vh;
      height: 70vh;
    }
    .first-view__circle:after {
      border-width: 70vh 70vh 0 0;
      border-top-right-radius: 70vh;
    }
  }

  /* 下矢印 */
  .pic_down {
    position: absolute;
    right: 2vw;
    bottom: 2%;
    animation: picdown 1s ease 0.2s infinite;
  }
  @keyframes picdown {
    /*タイプライターライクなアニメーション*/
    0% {
      transform: translateY(0);
    }
    100% {
      transform: translateY(20px);
    }
  }
</style>
