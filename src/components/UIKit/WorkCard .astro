---
type Props = {
  image: string;
  title: string;
  width: number;
  height: number;
  use_tech: string;
  href: string;
  comment: string;
};

const { image, title, width, height, use_tech, href, comment } = Astro.props;
---

<article class="work-card">
  <a href={href} class="link">
    <figure class="work-card__thumbnail">
      <img
        src={image}
        width={width}
        height={height}
        alt={title}
        class="work-card__thumbnail__image"
      />
    </figure>
    <div class="work-card__text">
      <p class="work-card__tag text-color">
        <svg
          width="14"
          height="14"
          viewBox="0 0 14 14"
          fill="#fff"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M8.32414 13L13 8.32414L5.67586 1L1.28966 1.28966L1 5.67586L8.32414 13Z"
            stroke="#331CBF"
            stroke-miterlimit="10"
            stroke-linecap="round"
            stroke-linejoin="round"></path>
          <path
            d="M3.68999 4.51723C3.23293 4.51723 2.86241 4.14671 2.86241 3.68965C2.86241 3.23258 3.23293 2.86206 3.68999 2.86206C4.14706 2.86206 4.51758 3.23258 4.51758 3.68965C4.51758 4.14671 4.14706 4.51723 3.68999 4.51723Z"
            stroke="#331CBF"
            stroke-miterlimit="10"
            stroke-linecap="round"
            stroke-linejoin="round"></path>
        </svg>
        {use_tech}
      </p>

      <h4 class="work-card__title text-color">
        {title}
      </h4>

      <p class="work-card__comment text-color">
        {comment}
      </p>
    </div>
  </a>
</article>

<script>
  import { intersection } from "../../ts/function";

  intersection(document.querySelectorAll(".work-card"));
</script>

<style>
  .link {
    display: block;
  }

  .link:hover .work-card__thumbnail .work-card__thumbnail__image {
    box-shadow: none;
    transform: scale(1.1);
  }

  .work-card {
    width: var(--card-size-width-3col);
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    background-color: var(--card-bgColor);
    opacity: 0;
    transform: translate3d(0, 30px, 0);
  }
  @media screen and (min-width: 482px) and (max-width: 1025px) {
    .work-card {
      width: var(--card-size-width-2col);
      transform: translate3d(0, 10px, 0);
    }
  }
  @media screen and (max-width: 481px) {
    .work-card {
      width: var(--card-size-width-1col);
      transform: translate3d(0, 10px, 0);
    }
  }

  .work-card.active {
    animation: animationName 0.5s ease 0.5s 1 forwards;
  }

  .work-card__thumbnail {
    overflow: hidden;
  }

  .work-card__thumbnail__image {
    aspect-ratio: 7 / 4;
  }

  .work-card__text {
    height: 180px;
  }

  .text-color {
    color: var(--accent-color);
    display: -webkit-box;
    -webkit-box-orient: vertical;
    overflow: hidden;
    word-break: break-all;
  }

  .work-card__tag {
    padding: 0 0 0 15px;
    font-size: 1em;
    -webkit-line-clamp: 1;
  }

  .work-card__title {
    padding: 10px 15px 0 15px;
    font-size: 1.5em;
    -webkit-line-clamp: 1;
  }

  .work-card__comment {
    padding: 15px 15px 0 15px;
    -webkit-line-clamp: 3;
  }

  @keyframes animationName {
    100% {
      opacity: 1;
      transform: translate3d(0, 0, 0);
    }
  }
</style>
