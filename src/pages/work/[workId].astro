---
import Layout from "../../layouts/Layout.astro";
import Header from "../../components/Header/Header";

type Work = {
  contents: Contents[];
};

type Contents = {
  id: string;
  image: Image;
  title: string;
  href: string;
  use_tech: string;
  comment_large: string;
};

type Image = {
  url: string;
};

export async function getStaticPaths() {
  const myMicroCMSApiUrl = `https://${
    import.meta.env.MICROCMS_SERVICE_DOMAIN_PORTFOLIO
  }.microcms.io/api/v1/works`;
  const res = await fetch(myMicroCMSApiUrl, {
    headers: {
      "X-MICROCMS-API-KEY": import.meta.env.MICROCMS_API_KEY_PORTFOLIO,
    },
  });
  const getFetchData: Work = await res.json();

  return getFetchData.contents.map((contents: Contents) => ({
    params: {
      workId: contents.id,
    },
  }));
}

//記事の詳細情報を取得
const { workId } = Astro.params;

const myMicroCMSApiUrl = `https://${
  import.meta.env.MICROCMS_SERVICE_DOMAIN_PORTFOLIO
}.microcms.io/api/v1/works/${workId}`;
const res = await fetch(myMicroCMSApiUrl, {
  headers: {
    "X-MICROCMS-API-KEY": import.meta.env.MICROCMS_API_KEY_PORTFOLIO,
  },
});
const getFetchWorkDetail: Contents = await res.json();

// サイトのURL取得
const site_url = Astro.url.href;
---

<Layout
  title={`${getFetchWorkDetail.title} | Watataku's ポートフォリオ`}
  description={getFetchWorkDetail.comment_large}
  site_url={site_url}
  ogp={getFetchWorkDetail.image.url}
>
  <div class="c-loader-bg js-loader-bg">
    <div class="c-loader-dot js-loader-dot-wrap">
      <span></span>
      <span></span>
      <span></span>
    </div>
  </div>
  <Header client:load />
  <section class="work-detail">
    <div class="work-detail__inner">
      <h1 class="work-detail__inner__title">{getFetchWorkDetail.title}</h1>
      <div class="work-detail__inner__thumbnail">
        <a href={getFetchWorkDetail.href} target="_blank"
          ><img
            class="work-detail__inner__thumbnail__image"
            src={getFetchWorkDetail.image.url}
            alt={getFetchWorkDetail.title}
          />
        </a>
      </div>
      <p class="work-detail__inner__url text">
        URL:
        <a href={getFetchWorkDetail.href} target="_blank"
          >{getFetchWorkDetail.href}</a
        >
      </p>
      <p class="work-detail__inner__tags text">
        使用技術:{getFetchWorkDetail.use_tech}
      </p>

      <div class="work-detail__inner__comment text">
        {getFetchWorkDetail.comment_large}
      </div>
    </div>
  </section>
</Layout>

<script>
  import {
    displayLoadingScreen,
    closeLoadingScreen,
    intersection,
  } from "../../ts/function";

  // intersection(document.querySelectorAll(".works-page__work__title"));
  // intersection(document.querySelectorAll(".works-page__work__inner"));

  const jsLoaderBg = ".js-loader-bg";
  const jsDot = ".js-loader-dot-wrap > span";

  //メイン
  displayLoadingScreen(jsDot);
  window.onload = () => {
    setTimeout(() => {
      closeLoadingScreen(jsDot, jsLoaderBg);
    }, 2500);
  };
</script>

<style>
  .c-loader-bg {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: #addff2;
    z-index: 999;
    display: grid;
    place-items: center;
    pointer-events: none;
    transition: 0.3s;
  }

  .c-loader-dot {
    display: inline-flex;
    align-items: center;
    justify-content: start;
    pointer-events: none;
  }

  .c-loader-dot > span {
    display: block;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    background-color: #000;
  }

  .c-loader-dot > span + span {
    margin-left: 4rem;
  }
  .work-detail {
    background-color: var(--main-color);
    padding: 5% 0 60px 0;
  }
  @media screen and (max-width: 481px) {
    .work-detail {
      padding: 80px 0 60px 0;
    }
  }

  .work-detail__inner {
    width: var(--base-width);
    margin: 0 auto;
  }

  .work-detail__inner__title {
    color: var(--accent-color);
    font-size: 4.5em;
    padding: 2% 0 30px 0;
  }
  @media screen and (min-width: 482px) and (max-width: 1025px) {
    .work-detail__inner__title {
      font-size: 3.5em;
      padding: 5% 0 30px 0;
    }
  }
  @media screen and (max-width: 481px) {
    .work-detail__inner__title {
      font-size: 2.5em;
      padding: 0 0 30px 0;
    }
  }

  .work-detail__inner__thumbnail {
  }

  .work-detail__inner__thumbnail__image {
    max-width: 100%;
    border: solid 1px #000;
  }

  .text {
    word-break: break-all;
  }

  .work-detail__inner__url {
    margin: 60px 0 10px 0;
  }

  .work-detail__inner__tags {
    margin: 20px 0;
  }

  .work-detail__inner__comment {
  }
</style>
